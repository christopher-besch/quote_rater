{"version":3,"file":"component---src-pages-index-tsx-835d3c177731e02723c6.js","mappings":"8MAMMA,EAAc,6DA0GpB,EAjGuB,SAACC,GACpB,IAMIC,EANJ,GAAmCC,EAAAA,EAAAA,WAAS,GAAvCC,EAAL,KAAiBC,EAAjB,KACA,GAAiCF,EAAAA,EAAAA,UAAS,aAArCG,EAAL,KACA,GADA,MACmCH,EAAAA,EAAAA,UAAS,eAAvCI,EAAL,KACA,GADA,MACmCJ,EAAAA,EAAAA,UAAS,KAAvCK,EAAL,KAAiBC,EAAjB,KACA,GAA2BN,EAAAA,EAAAA,UAAkB,IAAxCO,EAAL,KAAaC,EAAb,KAIIC,EAAkB,GAyDtB,OAvDAC,EAAAA,EAAAA,YAAU,WAEN,IAAIC,GADJZ,EAAoB,IAAIa,gBAAgBC,SAASC,SACVC,IAAI,cAEzB,IAAdV,GACAC,EAAeK,GAAkC,OAmDrD,gBAAC,IAAD,KACI,gBAAC,IAAD,CAASK,QAAQ,gBACjB,yBAAOC,QAAQ,oBAAf,sBACA,yBAAOC,GAAG,mBAAmBC,KAAK,OAAOC,YAAaf,IAAoB,2BAC1E,0BAAQgB,QApChB,WACI,IAjBSC,EAAaC,EAClBC,EAiBAC,EADmBC,SAASC,eAAe,oBACTC,MACtC7B,EAAkB8B,IAAI,aAAcJ,GACpCK,OAAOC,QAAQC,aAAa,GAAI,GAAOnB,SAASoB,SAAhD,IAA4DlC,EAAkBmC,YApBrEZ,EAsBLG,EAtBkBF,EAsBF,SAACY,GAGjB,IAFA,IAAIC,EACAC,EAAsB,GACnBD,EAAQvC,EAAYyC,KAAKH,IAC5B5B,EAAOgC,KAAK,CAAEC,OAAQJ,EAAM,GAAIK,KAAML,EAAM,GAAIM,OAAQN,EAAM,GAAIO,SAAUP,EAAM,KAClF3B,EAAI8B,KAAK,IAEbK,QAAQC,IAAIR,GACZ7B,EAAW6B,GACXnC,GAAe,KA9BfsB,EAAU,IAAIsB,gBACVC,OAAS,WACS,KAAlBvB,EAAQwB,OACRzB,EAASC,EAAQyB,cAEjBL,QAAQM,MAAR,mBAAiC5B,EAAjC,iBAAqDE,EAAQwB,SAGrExB,EAAQ2B,QAAU,WACdP,QAAQM,MAAR,mBAAiC5B,EAAjC,MAEJE,EAAQ4B,KAAK,MAAO9B,GAAK,GACzBE,EAAQ6B,OAqBR/C,EAAemB,KAkBX,QAECxB,GACG,2BACI,oCAAYM,EAAO+C,QACnB,uBAAKC,UAAWC,EAAAA,OACZ,uBAAKD,UAAWC,EAAAA,MACZ,2BAAK,4BACArD,KAGT,uBAAKoD,UAAWC,EAAAA,MACZ,2BAAK,4BACApD,MAIb,0BAAQiB,QAhCxB,cAgCgB,eACA,0BAAQA,QA9BxB,cA8BgB,iBACA,0BAAQA,QA5BxB,cA4BgB","sources":["webpack://quote_rater/./src/pages/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Layout from \"src/components/layout\";\nimport * as styles from \"src/styles/home.module.scss\";\nimport Heading from \"src/components/heading\";\n\nconst quote_regex = /### +(.*)\\n```\\n((?:.|\\n)*?)\\nâ€”(.*)\\n```\\n((?:- +.+\\n)*)/gm;\n\ntype Quote = {\n    origin: string;\n    text: string;\n    author: string;\n    comments: string;\n};\n\nconst Home: React.FC = (props) => {\n    let [show_cards, set_show_cards] = useState(false);\n    let [left_card, set_left_card] = useState(\"left_card\");\n    let [right_card, set_right_card] = useState(\"right_card\");\n    let [quotes_url, set_quotes_url] = useState(\"\");\n    let [quotes, set_quotes] = useState<Quote[]>([]);\n\n    let url_search_params: URLSearchParams;\n\n    let adj: number[][] = [];\n\n    useEffect(() => {\n        url_search_params = new URLSearchParams(location.search);\n        let quotes_url_raw = url_search_params.get(\"quotes_url\");\n\n        if (quotes_url == \"\")\n            set_quotes_url(quotes_url_raw ? quotes_url_raw : \"\");\n    });\n\n    function dwn(url: string, callback: { (response: string): void; }): void {\n        let request = new XMLHttpRequest();\n        request.onload = () => {\n            if (request.status == 200)\n                callback(request.responseText);\n            else {\n                console.error(`Failed to load '${url}' with status ${request.status}`);\n            }\n        };\n        request.onerror = () => {\n            console.error(`Failed to load '${url}'`);\n        };\n        request.open(\"GET\", url, true);\n        request.send();\n    }\n\n    function load() {\n        let quotes_url_input = document.getElementById(\"quotes_url_input\") as HTMLButtonElement;\n        let new_quotes_url = quotes_url_input.value;\n        url_search_params.set(\"quotes_url\", new_quotes_url);\n        window.history.replaceState({}, \"\", `${location.pathname}?${url_search_params.toString()}`);\n\n        dwn(new_quotes_url, (response) => {\n            let match;\n            let new_quotes: Quote[] = [];\n            while (match = quote_regex.exec(response)) {\n                quotes.push({ origin: match[1], text: match[2], author: match[3], comments: match[4] });\n                adj.push([]);\n            }\n            console.log(new_quotes);\n            set_quotes(new_quotes);\n            set_show_cards(true);\n        });\n        // gets applied after this function execution\n        set_quotes_url(new_quotes_url);\n    }\n\n    function left_better() {\n\n    }\n    function equal() {\n\n    }\n    function right_better() {\n\n    }\n\n    return (\n        <Layout>\n            <Heading heading=\"Quote Rater\" />\n            <label htmlFor=\"quotes_url_input\">Input Quotes URL: </label>\n            <input id=\"quotes_url_input\" type=\"text\" placeholder={quotes_url}></input><br />\n            <button onClick={load}>Load</button>\n\n            {show_cards && (\n                <div>\n                    <p>quotes: {quotes.length}</p>\n                    <div className={styles.cards}>\n                        <div className={styles.card}>\n                            <pre><code>\n                                {left_card}\n                            </code></pre>\n                        </div>\n                        <div className={styles.card}>\n                            <pre><code>\n                                {right_card}\n                            </code></pre>\n                        </div>\n                    </div>\n                    <button onClick={left_better}>Left Better</button>\n                    <button onClick={equal}>Roughly Equal</button>\n                    <button onClick={right_better}>Right Better</button>\n                </div>\n            )\n            }\n        </Layout >\n    );\n};\nexport default Home;\n"],"names":["quote_regex","props","url_search_params","useState","show_cards","set_show_cards","left_card","right_card","quotes_url","set_quotes_url","quotes","set_quotes","adj","useEffect","quotes_url_raw","URLSearchParams","location","search","get","heading","htmlFor","id","type","placeholder","onClick","url","callback","request","new_quotes_url","document","getElementById","value","set","window","history","replaceState","pathname","toString","response","match","new_quotes","exec","push","origin","text","author","comments","console","log","XMLHttpRequest","onload","status","responseText","error","onerror","open","send","length","className","styles"],"sourceRoot":""}