{"version":3,"sources":["../../src/utils/babel-loader-helpers.js"],"names":["path","require","_","loadCachedConfig","pluginBabelConfig","stages","test","plugins","presets","process","env","NODE_ENV","join","cwd","getCustomOptions","stage","options","configItemsMemoCache","Map","prepareOptions","babel","resolve","reactRuntime","reactImportSource","has","get","requiredPlugins","createConfigItem","staticQueryDir","type","push","apis","requiredPresets","fallbackPresets","reduxPlugins","reduxPresets","forEach","plugin","name","preset","toReturn","set","addRequiredPresetOptions","gatsbyPresetResolved","index","findIndex","p","file","resolved","mergeConfigItemOptions","items","itemToMerge","i","merge","exports"],"mappings":"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","sourcesContent":["const path = require(`path`)\nconst _ = require(`lodash`)\n\nconst loadCachedConfig = () => {\n  let pluginBabelConfig = {\n    stages: {\n      test: { plugins: [], presets: [] },\n    },\n  }\n  if (process.env.NODE_ENV !== `test`) {\n    pluginBabelConfig = require(path.join(\n      process.cwd(),\n      `./.cache/babelState.json`\n    ))\n  }\n  return pluginBabelConfig\n}\n\nconst getCustomOptions = stage => {\n  const pluginBabelConfig = loadCachedConfig()\n  return pluginBabelConfig.stages[stage].options\n}\n\n/**\n * https://babeljs.io/docs/en/babel-core#createconfigitem\n * If this function is called multiple times for a given plugin,\n * Babel will call the plugin's function itself multiple times.\n * If you have a clear set of expected plugins and presets to inject,\n * pre-constructing the config items would be recommended.\n */\nconst configItemsMemoCache = new Map()\n\nconst prepareOptions = (babel, options = {}, resolve = require.resolve) => {\n  const { stage, reactRuntime, reactImportSource } = options\n\n  if (configItemsMemoCache.has(stage)) {\n    return configItemsMemoCache.get(stage)\n  }\n\n  const pluginBabelConfig = loadCachedConfig()\n\n  // Required plugins/presets\n  const requiredPlugins = [\n    babel.createConfigItem(\n      [\n        resolve(`babel-plugin-remove-graphql-queries`),\n        { stage, staticQueryDir: `page-data/sq/d` },\n      ],\n      {\n        type: `plugin`,\n      }\n    ),\n  ]\n\n  if (\n    _CFLAGS_.GATSBY_MAJOR === `4` &&\n    (stage === `develop` || stage === `build-javascript`)\n  ) {\n    requiredPlugins.push(\n      babel.createConfigItem(\n        [\n          resolve(`./babel/babel-plugin-remove-api`),\n          {\n            apis: [`getServerData`, `config`],\n          },\n        ],\n        {\n          type: `plugin`,\n        }\n      )\n    )\n  }\n\n  const requiredPresets = []\n\n  // Stage specific plugins to add\n  if (\n    _CFLAGS_.GATSBY_MAJOR !== `4` &&\n    (stage === `build-html` || stage === `develop-html`)\n  ) {\n    requiredPlugins.push(\n      babel.createConfigItem([resolve(`babel-plugin-dynamic-import-node`)], {\n        type: `plugin`,\n      })\n    )\n  }\n\n  if (\n    _CFLAGS_.GATSBY_MAJOR === `4` &&\n    (stage === `build-html` || stage === `develop-html`)\n  ) {\n    requiredPlugins.push(\n      babel.createConfigItem(\n        [\n          resolve(`./babel/babel-plugin-env-vars`),\n          {\n            apis: [`getServerData`],\n          },\n        ],\n        {\n          type: `plugin`,\n        }\n      )\n    )\n  }\n\n  if (stage === `develop`) {\n    requiredPlugins.push(\n      babel.createConfigItem([resolve(`react-refresh/babel`)], {\n        type: `plugin`,\n      })\n    )\n  }\n\n  // Fallback preset\n  const fallbackPresets = []\n\n  fallbackPresets.push(\n    babel.createConfigItem(\n      [\n        resolve(`babel-preset-gatsby`),\n        {\n          stage,\n          reactRuntime,\n          reactImportSource,\n        },\n      ],\n      {\n        type: `preset`,\n      }\n    )\n  )\n\n  // Go through babel state and create config items for presets/plugins from.\n  const reduxPlugins = []\n  const reduxPresets = []\n  pluginBabelConfig.stages[stage].plugins.forEach(plugin => {\n    reduxPlugins.push(\n      babel.createConfigItem([resolve(plugin.name), plugin.options], {\n        name: plugin.name,\n        type: `plugin`,\n      })\n    )\n  })\n  pluginBabelConfig.stages[stage].presets.forEach(preset => {\n    reduxPresets.push(\n      babel.createConfigItem([resolve(preset.name), preset.options], {\n        name: preset.name,\n        type: `preset`,\n      })\n    )\n  })\n\n  const toReturn = [\n    reduxPresets,\n    reduxPlugins,\n    requiredPresets,\n    requiredPlugins,\n    fallbackPresets,\n  ]\n\n  configItemsMemoCache.set(stage, toReturn)\n\n  return toReturn\n}\n\nconst addRequiredPresetOptions = (\n  babel,\n  presets,\n  options = {},\n  resolve = require.resolve\n) => {\n  // Always pass `stage` option to babel-preset-gatsby\n  //  (even if defined in custom babelrc)\n  const gatsbyPresetResolved = resolve(`babel-preset-gatsby`)\n  const index = presets.findIndex(p => p.file.resolved === gatsbyPresetResolved)\n\n  if (index !== -1) {\n    presets[index] = babel.createConfigItem(\n      [\n        gatsbyPresetResolved,\n        { ...presets[index].options, stage: options.stage },\n      ],\n      { type: `preset` }\n    )\n  }\n  return presets\n}\n\nconst mergeConfigItemOptions = ({ items, itemToMerge, type, babel }) => {\n  const index = _.findIndex(\n    items,\n    i => i.file.resolved === itemToMerge.file.resolved\n  )\n\n  // If this exist, merge the options, otherwise, add it to the array\n  if (index !== -1) {\n    items[index] = babel.createConfigItem(\n      [\n        itemToMerge.file.resolved,\n        _.merge({}, items[index].options, itemToMerge.options),\n      ],\n      {\n        type,\n      }\n    )\n  } else {\n    items.push(itemToMerge)\n  }\n\n  return items\n}\n\nexports.getCustomOptions = getCustomOptions\n\n// Export helper functions for testing\nexports.prepareOptions = prepareOptions\nexports.mergeConfigItemOptions = mergeConfigItemOptions\nexports.addRequiredPresetOptions = addRequiredPresetOptions\n"],"file":"babel-loader-helpers.js"}