{"version":3,"sources":["../../src/commands/serve.ts"],"names":["telemetry","trackCli","readMatchPaths","program","filePath","path","join","directory","rawJSON","fs","readFile","error","report","warn","chalk","bold","JSON","parse","matchPathRouter","matchPaths","options","req","res","next","url","accepts","matchPath","find","sendFile","err","module","exports","startBackgroundUpdate","process","env","GATSBY_OPEN_TRACING_CONFIG_FILE","openTracingConfigFile","prefixPaths","port","open","host","parseInt","configModule","config","pathPrefix","configPathPrefix","root","app","router","express","Router","use","expressMiddleware","static","dotfiles","compiledFunctionsDir","functions","readFileSync","e","any","urlencoded","extended","_","cookies","headers","cookie","text","json","raw","pathFragment","params","functionObj","functionRoute","some","f","matchResult","pathToFunction","absoluteCompiledFilePath","start","Date","now","require","cache","resolve","fn","fnToExecute","default","Promise","console","headersSent","sendStatus","end","log","GraphQLEngine","getData","renderPageData","renderHTML","graphqlEngine","dbPath","get","requestedPagePath","pagePath","potentialPagePath","page","findPageByPath","mode","requestActivity","phantomActivity","spanContext","span","context","data","pathName","results","serverDataHeaders","name","value","Object","entries","setHeader","serverDataStatus","status","send","contentType","header","printInstructions","appName","urls","lanUrlForTerminal","localUrlForTerminal","startListening","listen","ssl","sitePackageJson","info","localUrlForBrowser","catch","message"],"mappings":"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","sourcesContent":["import path from \"path\"\nimport openurl from \"better-opn\"\nimport fs from \"fs-extra\"\nimport compression from \"compression\"\nimport express from \"express\"\nimport chalk from \"chalk\"\nimport { match as reachMatch } from \"@gatsbyjs/reach-router/lib/utils\"\nimport onExit from \"signal-exit\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport multer from \"multer\"\nimport cookie from \"cookie\"\nimport telemetry from \"gatsby-telemetry\"\n\nimport { detectPortInUseAndPrompt } from \"../utils/detect-port-in-use-and-prompt\"\nimport { getConfigFile } from \"../bootstrap/get-config-file\"\nimport { preferDefault } from \"../bootstrap/prefer-default\"\nimport { IProgram } from \"./types\"\nimport { IPreparedUrls, prepareUrls } from \"../utils/prepare-urls\"\nimport { IGatsbyFunction } from \"../redux/types\"\nimport { reverseFixedPagePath } from \"../utils/page-data\"\nimport { initTracer } from \"../utils/tracer\"\n\ninterface IMatchPath {\n  path: string\n  matchPath: string\n}\n\ninterface IServeProgram extends IProgram {\n  prefixPaths: boolean\n}\n\nonExit(() => {\n  telemetry.trackCli(`SERVE_STOP`)\n})\n\nconst readMatchPaths = async (\n  program: IServeProgram\n): Promise<Array<IMatchPath>> => {\n  const filePath = path.join(program.directory, `.cache`, `match-paths.json`)\n  let rawJSON = `[]`\n  try {\n    rawJSON = await fs.readFile(filePath, `utf8`)\n  } catch (error) {\n    report.warn(error)\n    report.warn(\n      `Could not read ${chalk.bold(\n        `match-paths.json`\n      )} from the .cache directory`\n    )\n    report.warn(\n      `Client-side routing will not work correctly. Maybe you need to re-run ${chalk.bold(\n        `gatsby build`\n      )}?`\n    )\n  }\n  return JSON.parse(rawJSON) as Array<IMatchPath>\n}\n\nconst matchPathRouter =\n  (\n    matchPaths: Array<IMatchPath>,\n    options: {\n      root: string\n    }\n  ) =>\n  (\n    req: express.Request,\n    res: express.Response,\n    next: express.NextFunction\n  ): void => {\n    const { url } = req\n    if (req.accepts(`html`)) {\n      const matchPath = matchPaths.find(\n        ({ matchPath }) => reachMatch(matchPath, url) !== null\n      )\n      if (matchPath) {\n        return res.sendFile(\n          path.join(matchPath.path, `index.html`),\n          options,\n          err => {\n            if (err) {\n              next()\n            }\n          }\n        )\n      }\n    }\n    return next()\n  }\n\nmodule.exports = async (program: IServeProgram): Promise<void> => {\n  telemetry.trackCli(`SERVE_START`)\n  telemetry.startBackgroundUpdate()\n  await initTracer(\n    process.env.GATSBY_OPEN_TRACING_CONFIG_FILE || program.openTracingConfigFile\n  )\n  let { prefixPaths, port, open, host } = program\n  port = typeof port === `string` ? parseInt(port, 10) : port\n\n  const { configModule } = await getConfigFile(\n    program.directory,\n    `gatsby-config`\n  )\n  const config = preferDefault(configModule)\n\n  const { pathPrefix: configPathPrefix } = config || {}\n\n  const pathPrefix = prefixPaths && configPathPrefix ? configPathPrefix : `/`\n\n  const root = path.join(program.directory, `public`)\n\n  const app = express()\n  // eslint-disable-next-line new-cap\n  const router = express.Router()\n\n  app.use(telemetry.expressMiddleware(`SERVE`))\n\n  router.use(compression())\n  router.use(express.static(`public`, { dotfiles: `allow` }))\n\n  const compiledFunctionsDir = path.join(\n    program.directory,\n    `.cache`,\n    `functions`\n  )\n\n  let functions: Array<IGatsbyFunction> = []\n  try {\n    functions = JSON.parse(\n      fs.readFileSync(path.join(compiledFunctionsDir, `manifest.json`), `utf-8`)\n    )\n  } catch (e) {\n    // ignore\n  }\n\n  if (functions) {\n    app.use(\n      `/api/*`,\n      multer().any(),\n      express.urlencoded({ extended: true }),\n      (req, _, next) => {\n        const cookies = req.headers.cookie\n\n        if (!cookies) {\n          return next()\n        }\n\n        req.cookies = cookie.parse(cookies)\n\n        return next()\n      },\n      express.text(),\n      express.json(),\n      express.raw(),\n      async (req, res, next) => {\n        const { \"0\": pathFragment } = req.params\n\n        // Check first for exact matches.\n        let functionObj = functions.find(\n          ({ functionRoute }) => functionRoute === pathFragment\n        )\n\n        if (!functionObj) {\n          // Check if there's any matchPaths that match.\n          // We loop until we find the first match.\n          functions.some(f => {\n            if (f.matchPath) {\n              const matchResult = reachMatch(f.matchPath, pathFragment)\n              if (matchResult) {\n                req.params = matchResult.params\n                if (req.params[`*`]) {\n                  // Backwards compatability for v3\n                  // TODO remove in v5\n                  req.params[`0`] = req.params[`*`]\n                }\n                functionObj = f\n\n                return true\n              }\n            }\n\n            return false\n          })\n        }\n\n        if (functionObj) {\n          const pathToFunction = functionObj.absoluteCompiledFilePath\n          const start = Date.now()\n\n          try {\n            delete require.cache[require.resolve(pathToFunction)]\n            const fn = require(pathToFunction)\n\n            const fnToExecute = (fn && fn.default) || fn\n\n            await Promise.resolve(fnToExecute(req, res))\n          } catch (e) {\n            console.error(e)\n            // Don't send the error if that would cause another error.\n            if (!res.headersSent) {\n              res.sendStatus(500)\n            }\n          }\n\n          const end = Date.now()\n          console.log(\n            `Executed function \"/api/${functionObj.functionRoute}\" in ${\n              end - start\n            }ms`\n          )\n\n          return\n        } else {\n          next()\n        }\n      }\n    )\n  }\n\n  // Handle SSR & DSG Pages\n  if (_CFLAGS_.GATSBY_MAJOR === `4`) {\n    try {\n      const { GraphQLEngine } = require(path.join(\n        program.directory,\n        `.cache`,\n        `query-engine`\n      )) as typeof import(\"../schema/graphql-engine/entry\")\n      const { getData, renderPageData, renderHTML } = require(path.join(\n        program.directory,\n        `.cache`,\n        `page-ssr`\n      )) as typeof import(\"../utils/page-ssr-module/entry\")\n      const graphqlEngine = new GraphQLEngine({\n        dbPath: path.join(program.directory, `.cache`, `data`, `datastore`),\n      })\n\n      app.get(\n        `/page-data/:pagePath(*)/page-data.json`,\n        async (req, res, next) => {\n          const requestedPagePath = req.params.pagePath\n          if (!requestedPagePath) {\n            return void next()\n          }\n\n          const potentialPagePath = reverseFixedPagePath(requestedPagePath)\n          const page = graphqlEngine.findPageByPath(potentialPagePath)\n\n          if (page && (page.mode === `DSG` || page.mode === `SSR`)) {\n            const requestActivity = report.phantomActivity(\n              `request for \"${req.path}\"`\n            )\n            requestActivity.start()\n            try {\n              const spanContext = requestActivity.span.context()\n              const data = await getData({\n                pathName: req.path,\n                graphqlEngine,\n                req,\n                spanContext,\n              })\n              const results = await renderPageData({ data, spanContext })\n              if (page.mode === `SSR` && data.serverDataHeaders) {\n                for (const [name, value] of Object.entries(\n                  data.serverDataHeaders\n                )) {\n                  res.setHeader(name, value)\n                }\n              }\n\n              if (page.mode === `SSR` && data.serverDataStatus) {\n                return void res.status(data.serverDataStatus).send(results)\n              } else {\n                return void res.send(results)\n              }\n            } catch (e) {\n              report.error(\n                `Generating page-data for \"${requestedPagePath}\" / \"${potentialPagePath}\" failed.`,\n                e\n              )\n              return res\n                .status(500)\n                .contentType(`text/plain`)\n                .send(`Internal server error.`)\n            } finally {\n              requestActivity.end()\n            }\n          }\n\n          return void next()\n        }\n      )\n\n      router.use(async (req, res, next) => {\n        if (req.accepts(`html`)) {\n          const potentialPagePath = req.path\n          const page = graphqlEngine.findPageByPath(potentialPagePath)\n          if (page && (page.mode === `DSG` || page.mode === `SSR`)) {\n            const requestActivity = report.phantomActivity(\n              `request for \"${req.path}\"`\n            )\n            requestActivity.start()\n\n            try {\n              const spanContext = requestActivity.span.context()\n              const data = await getData({\n                pathName: potentialPagePath,\n                graphqlEngine,\n                req,\n                spanContext,\n              })\n              const results = await renderHTML({ data, spanContext })\n              if (page.mode === `SSR` && data.serverDataHeaders) {\n                for (const [name, value] of Object.entries(\n                  data.serverDataHeaders\n                )) {\n                  res.setHeader(name, value)\n                }\n              }\n\n              if (page.mode === `SSR` && data.serverDataStatus) {\n                return void res.status(data.serverDataStatus).send(results)\n              } else {\n                return void res.send(results)\n              }\n            } catch (e) {\n              report.error(\n                `Rendering html for \"${potentialPagePath}\" failed.`,\n                e\n              )\n              return res.status(500).sendFile(`500.html`, { root }, err => {\n                if (err) {\n                  res.contentType(`text/plain`).send(`Internal server error.`)\n                }\n              })\n            } finally {\n              requestActivity.end()\n            }\n          }\n        }\n        return next()\n      })\n    } catch (error) {\n      // TODO: Handle case of engine not being generated\n    }\n  }\n\n  const matchPaths = await readMatchPaths(program)\n  router.use(matchPathRouter(matchPaths, { root }))\n\n  // TODO: Remove/merge with above same block\n  router.use((req, res, next) => {\n    if (req.accepts(`html`)) {\n      return res.status(404).sendFile(`404.html`, { root })\n    }\n    return next()\n  })\n  app.use(function (\n    _: express.Request,\n    res: express.Response,\n    next: express.NextFunction\n  ) {\n    res.header(`Access-Control-Allow-Origin`, `*`)\n    res.header(\n      `Access-Control-Allow-Headers`,\n      `Origin, X-Requested-With, Content-Type, Accept`\n    )\n    next()\n  })\n  app.use(pathPrefix, router)\n\n  function printInstructions(appName: string, urls: IPreparedUrls): void {\n    console.log()\n    console.log(`You can now view ${chalk.bold(appName)} in the browser.`)\n    console.log()\n\n    if (urls.lanUrlForTerminal) {\n      console.log(\n        `  ${chalk.bold(`Local:`)}            ${urls.localUrlForTerminal}`\n      )\n      console.log(\n        `  ${chalk.bold(`On Your Network:`)}  ${urls.lanUrlForTerminal}`\n      )\n    } else {\n      console.log(`  ${urls.localUrlForTerminal}`)\n    }\n  }\n\n  const startListening = (): void => {\n    app.listen(port, host, () => {\n      const urls = prepareUrls(\n        program.ssl ? `https` : `http`,\n        program.host,\n        port\n      )\n      printInstructions(\n        program.sitePackageJson.name || `(Unnamed package)`,\n        urls\n      )\n      if (open) {\n        report.info(`Opening browser...`)\n        Promise.resolve(openurl(urls.localUrlForBrowser)).catch(() =>\n          report.warn(`Browser not opened because no browser was found`)\n        )\n      }\n    })\n  }\n\n  try {\n    port = await detectPortInUseAndPrompt(port)\n    startListening()\n  } catch (e) {\n    if (e.message === `USER_REJECTED`) {\n      return\n    }\n\n    throw e\n  }\n}\n"],"file":"serve.js"}