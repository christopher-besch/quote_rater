{"version":3,"sources":["../../../src/schema/graphql-engine/bundle-webpack.ts"],"names":["extensions","outputDir","path","join","process","cwd","cacheLocation","createGraphqlEngineBundle","rootDir","reporter","isVerbose","schemaSnapshotString","fs","readFile","compiler","name","mode","entry","__dirname","output","filename","libraryTarget","target","externalsPresets","node","cache","type","buildDependencies","config","__filename","externals","mod","builtinModules","reduce","acc","builtinModule","module","rules","test","resolve","byDependency","esm","fullySpecified","parser","amd","use","loader","require","options","outputAssetBase","alias","inquirer","plugins","webpack","DefinePlugin","SCHEMA_SNAPSHOT","JSON","stringify","env","GATSBY_WEBPACK_LOGGING","includes","WebpackLoggingPlugin","filter","Boolean","Promise","reject","run","err","stats","close","closeErr","compilation"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAPA;AAYA,MAAMA,UAAU,GAAG,CAAE,MAAF,EAAU,KAAV,EAAiB,OAAjB,EAA0B,OAA1B,EAAmC,KAAnC,EAA0C,MAA1C,CAAnB;AAEA,MAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAA0B,QAA1B,EAAoC,cAApC,CAAlB;AACA,MAAMC,aAAa,GAAGJ,IAAI,CAACC,IAAL,CACpBC,OAAO,CAACC,GAAR,EADoB,EAEnB,QAFmB,EAGnB,SAHmB,EAInB,cAJmB,CAAtB;;AAOO,eAAeE,yBAAf,CACLC,OADK,EAELC,QAFK,EAGLC,SAHK,EAIqC;AAAA;;AAC1C,QAAMC,oBAAoB,GAAG,MAAMC,EAAE,CAACC,QAAH,CACjCX,IAAI,CAACC,IAAL,CAAUK,OAAV,EAAoB,QAApB,EAA8B,YAA9B,CADiC,EAEhC,OAFgC,CAAnC;AAIA,QAAM,4CAAN;AAEA,QAAMM,QAAQ,GAAG,sBAAQ;AACvBC,IAAAA,IAAI,EAAG,cADgB;AAEvB;AACAC,IAAAA,IAAI,EAAG,MAHgB;AAIvBC,IAAAA,KAAK,EAAEf,IAAI,CAACC,IAAL,CAAUe,SAAV,EAAsB,UAAtB,CAJgB;AAKvBC,IAAAA,MAAM,EAAE;AACNjB,MAAAA,IAAI,EAAED,SADA;AAENmB,MAAAA,QAAQ,EAAG,UAFL;AAGNC,MAAAA,aAAa,EAAG;AAHV,KALe;AAUvBC,IAAAA,MAAM,EAAG,MAVc;AAWvBC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,IAAI,EAAE;AADU,KAXK;AAcvBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAG,YADF;AAELX,MAAAA,IAAI,EAAG,gBAFF;AAGLT,MAAAA,aAHK;AAILqB,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,MAAM,EAAE,CAACC,UAAD;AADS;AAJd,KAdgB;AAsBvB;AACAC,IAAAA,SAAS,EAAE,CACR,QADQ,EACC;AACT,4CAFQ,EAEiC;AACzC,cAHQ,EAGG;AACZC,oBAAIC,cAAJ,CAAmBC,MAAnB,CAA0B,CAACC,GAAD,EAAMC,aAAN,KAAwB;AAChD,UAAIA,aAAa,KAAM,IAAvB,EAA4B;AAC1BD,QAAAA,GAAG,CAACC,aAAD,CAAH,GAAsB,yBAAtB;AACD,OAFD,MAEO;AACLD,QAAAA,GAAG,CAACC,aAAD,CAAH,GAAsB,YAAWA,aAAc,EAA/C;AACD;;AAED,aAAOD,GAAP;AACD,KARD,EAQG,EARH,CAJS,CAvBY;AAqCvBE,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,IAAI,EAAE,SADR;AAEEZ,QAAAA,IAAI,EAAG,iBAFT;AAGEa,QAAAA,OAAO,EAAE;AACPC,UAAAA,YAAY,EAAE;AACZC,YAAAA,GAAG,EAAE;AACHC,cAAAA,cAAc,EAAE;AADb;AADO;AADP;AAHX,OADK,EAYL;AACE;AACAJ,QAAAA,IAAI,EAAE,gBAFR;AAGE;AACAK,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP,SAJV;AAKEC,QAAAA,GAAG,EAAE;AACHC,UAAAA,MAAM,EAAEC,OAAO,CAACR,OAAR,CAAiB,wCAAjB,CADL;AAEHS,UAAAA,OAAO,EAAE;AACPC,YAAAA,eAAe,EAAG;AADX;AAFN;AALP,OAZK,EAwBL;AACEX,QAAAA,IAAI,EAAE,OADR;AAEEZ,QAAAA,IAAI,EAAG;AAFT,OAxBK;AADD,KArCe;AAoEvBa,IAAAA,OAAO,EAAE;AACPvC,MAAAA,UADO;AAEPkD,MAAAA,KAAK,EAAE;AACL,kBAAU9C,OAAO,CAACC,GAAR,KAAiB,UADtB;AAGL,SAAC0C,OAAO,CAACR,OAAR,CAAiB,8CAAjB,CAAD,GACE,KAJG;AAKLY,QAAAA,QAAQ,EAAE;AALL;AAFA,KApEc;AA8EvBC,IAAAA,OAAO,EAAE,CACP,IAAIC,iBAAQC,YAAZ,CAAyB;AACvB;AACA,oDAA+C,MAFxB;AAGvB,wDAAmD,MAH5B;AAIvBC,MAAAA,eAAe,EAAEC,IAAI,CAACC,SAAL,CAAe9C,oBAAf,CAJM;AAKvB,mCAA6B6C,IAAI,CAACC,SAAL,CAAgB,WAAhB;AALN,KAAzB,CADO,EAQP,0BAAArD,OAAO,CAACsD,GAAR,CAAYC,sBAAZ,gFAAoCC,QAApC,CAA8C,cAA9C,MACE,IAAIC,oCAAJ,CAAyBrD,OAAzB,EAAkCC,QAAlC,EAA4CC,SAA5C,CATK,EAUPoD,MAVO,CAUAC,OAVA;AA9Ec,GAAR,CAAjB;AA2FA,SAAO,IAAIC,OAAJ,CAAY,CAACzB,OAAD,EAAU0B,MAAV,KAAqB;AACtCnD,IAAAA,QAAQ,CAACoD,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC3BtD,MAAAA,QAAQ,CAACuD,KAAT,CAAeC,QAAQ,IAAI;AACzB,YAAIH,GAAJ,EAAS;AACP,iBAAOF,MAAM,CAACE,GAAD,CAAb;AACD;;AACD,YAAIG,QAAJ,EAAc;AACZ,iBAAOL,MAAM,CAACK,QAAD,CAAb;AACD;;AACD,eAAO/B,OAAO,CAAC6B,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEG,WAAR,CAAd;AACD,OARD;AASD,KAVD;AAWD,GAZM,CAAP;AAaD","sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\n\nimport * as path from \"path\"\nimport * as fs from \"fs-extra\"\nimport webpack from \"webpack\"\nimport { printQueryEnginePlugins } from \"./print-plugins\"\nimport mod from \"module\"\nimport { WebpackLoggingPlugin } from \"../../utils/webpack/plugins/webpack-logging\"\nimport reporter from \"gatsby-cli/lib/reporter\"\n\ntype Reporter = typeof reporter\n\nconst extensions = [`.mjs`, `.js`, `.json`, `.node`, `.ts`, `.tsx`]\n\nconst outputDir = path.join(process.cwd(), `.cache`, `query-engine`)\nconst cacheLocation = path.join(\n  process.cwd(),\n  `.cache`,\n  `webpack`,\n  `query-engine`\n)\n\nexport async function createGraphqlEngineBundle(\n  rootDir: string,\n  reporter: Reporter,\n  isVerbose?: boolean\n): Promise<webpack.Compilation | undefined> {\n  const schemaSnapshotString = await fs.readFile(\n    path.join(rootDir, `.cache`, `schema.gql`),\n    `utf-8`\n  )\n  await printQueryEnginePlugins()\n\n  const compiler = webpack({\n    name: `Query Engine`,\n    // mode: `production`,\n    mode: `none`,\n    entry: path.join(__dirname, `entry.js`),\n    output: {\n      path: outputDir,\n      filename: `index.js`,\n      libraryTarget: `commonjs`,\n    },\n    target: `node`,\n    externalsPresets: {\n      node: false,\n    },\n    cache: {\n      type: `filesystem`,\n      name: `graphql-engine`,\n      cacheLocation,\n      buildDependencies: {\n        config: [__filename],\n      },\n    },\n    // those are required in some runtime paths, but we don't need them\n    externals: [\n      `cbor-x`, // optional dep of lmdb-store, but we are using `msgpack` (default) encoding, so we don't need it\n      `babel-runtime/helpers/asyncToGenerator`, // undeclared dep of yurnalist (but used in code path we don't use)\n      `electron`, // :shrug: `got` seems to have electron specific code path\n      mod.builtinModules.reduce((acc, builtinModule) => {\n        if (builtinModule === `fs`) {\n          acc[builtinModule] = `global _actualFsWrapper`\n        } else {\n          acc[builtinModule] = `commonjs ${builtinModule}`\n        }\n\n        return acc\n      }, {}),\n    ],\n    module: {\n      rules: [\n        {\n          test: /\\.m?js$/,\n          type: `javascript/auto`,\n          resolve: {\n            byDependency: {\n              esm: {\n                fullySpecified: false,\n              },\n            },\n          },\n        },\n        {\n          // For node binary relocations, include \".node\" files as well here\n          test: /\\.(m?js|node)$/,\n          // it is recommended for Node builds to turn off AMD support\n          parser: { amd: false },\n          use: {\n            loader: require.resolve(`@vercel/webpack-asset-relocator-loader`),\n            options: {\n              outputAssetBase: `assets`,\n            },\n          },\n        },\n        {\n          test: /\\.txt/,\n          type: `asset/resource`,\n        },\n      ],\n    },\n    resolve: {\n      extensions,\n      alias: {\n        \".cache\": process.cwd() + `/.cache/`,\n\n        [require.resolve(`gatsby-cli/lib/reporter/loggers/ink/index.js`)]:\n          false,\n        inquirer: false,\n      },\n    },\n    plugins: [\n      new webpack.DefinePlugin({\n        // \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n        \"process.env.GATSBY_EXPERIMENTAL_LMDB_STORE\": `true`,\n        \"process.env.GATSBY_SKIP_WRITING_SCHEMA_TO_FILE\": `true`,\n        SCHEMA_SNAPSHOT: JSON.stringify(schemaSnapshotString),\n        \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n      }),\n      process.env.GATSBY_WEBPACK_LOGGING?.includes(`query-engine`) &&\n        new WebpackLoggingPlugin(rootDir, reporter, isVerbose),\n    ].filter(Boolean) as Array<webpack.WebpackPluginInstance>,\n  })\n\n  return new Promise((resolve, reject) => {\n    compiler.run((err, stats) => {\n      compiler.close(closeErr => {\n        if (err) {\n          return reject(err)\n        }\n        if (closeErr) {\n          return reject(closeErr)\n        }\n        return resolve(stats?.compilation)\n      })\n    })\n  })\n}\n"],"file":"bundle-webpack.js"}