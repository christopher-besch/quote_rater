import { CommandOptions } from '../parser';
export declare const cliDefinition: {
    readonly description: "Output GraphQL operations in your TypeScript sources to markdown file.";
    readonly options: {
        readonly project: {
            readonly alias: "p";
            readonly description: "Analyze the project given the path to its configuration file, or to a folder with a 'tsconfig.json'.";
            readonly defaultValue: ".";
            readonly type: "string";
        };
        readonly outFile: {
            readonly alias: "o";
            readonly description: "Output Markdown file name.";
            readonly defaultValue: "GRAPHQL_OPERATIONS.md";
            readonly type: "string";
        };
        readonly fromManifest: {
            readonly alias: "M";
            readonly description: "Path to manifest.json file.";
            readonly type: "string";
        };
        readonly includeFragments: {
            readonly description: "If set, report including fragment informations.";
            readonly type: "boolean";
        };
        readonly verbose: {
            readonly description: "Show debug messages.";
            readonly type: "boolean";
        };
    };
};
export declare function reportCommand({ options }: CommandOptions<typeof cliDefinition>): Promise<boolean>;
