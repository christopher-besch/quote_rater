"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validate = void 0;
const graphql_language_service_interface_1 = require("graphql-language-service-interface");
const errors_1 = require("../errors");
function validate(extractedResults, schema) {
    const errors = [];
    extractedResults.forEach(r => {
        if (!r.resolevedTemplateInfo)
            return;
        const { combinedText, getSourcePosition, convertInnerLocation2InnerPosition } = r.resolevedTemplateInfo;
        const diagnostics = (0, graphql_language_service_interface_1.getDiagnostics)(combinedText, schema);
        diagnostics.forEach(diagnositc => {
            const { pos: startPositionOfSource, isInOtherExpression } = getSourcePosition(convertInnerLocation2InnerPosition(diagnositc.range.start));
            if (isInOtherExpression)
                return;
            let endPositionOfSource = 0;
            try {
                endPositionOfSource = getSourcePosition(convertInnerLocation2InnerPosition(diagnositc.range.end)).pos;
            }
            catch (error) {
                endPositionOfSource = startPositionOfSource + 1;
            }
            errors.push(new errors_1.ErrorWithLocation(diagnositc.message, {
                fileName: r.fileName,
                severity: diagnositc.severity === 2 ? 'Warn' : 'Error',
                content: r.templateNode.getSourceFile().getText(),
                start: startPositionOfSource,
                end: endPositionOfSource,
            }));
        });
    });
    return errors;
}
exports.validate = validate;
//# sourceMappingURL=validator.js.map