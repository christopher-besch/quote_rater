export { ErrorReporter } from './error-reporter';
export declare type ErrorRange = {
    fileName: string;
    start: number;
    end: number;
};
export declare type Severity = 'Error' | 'Warn';
export declare type ErrorContent = ErrorRange & {
    severity?: Severity;
    content: string;
};
export declare class ErrorWithLocation extends Error {
    readonly message: string;
    readonly errorContent: ErrorContent;
    readonly name = "ErrorWithLocation";
    readonly severity: Severity;
    constructor(message: string, errorContent: ErrorContent);
}
export declare class ErrorWithoutLocation extends Error {
    readonly message: string;
    readonly severity: Severity;
    readonly name = "ErrorWithoutLocation";
    constructor(message: string, severity?: Severity);
}
export declare type TsGqlError = ErrorWithLocation | ErrorWithoutLocation;
export declare const ERROR_CODES: {
    graphqlLangServiceError: {
        code: number;
    };
    templateIsTooComplex: {
        code: number;
        message: string;
    };
    errorInOtherInterpolation: {
        code: number;
        message: string;
    };
    schemaBuildError: {
        code: number;
    };
};
