import * as ts from 'typescript';
import { ResolvedTemplateInfo, ResolveResult } from './types';
export declare function createResultForNoSubstitution(node: ts.NoSubstitutionTemplateLiteral, fileName: string): ResolvedTemplateInfo;
export declare class TemplateExpressionResolver {
    private readonly _langService;
    private readonly _getFileVersion;
    logger: (msg: string) => void;
    constructor(_langService: ts.LanguageService, _getFileVersion: (fileName: string) => string);
    resolve(fileName: string, node: ts.TaggedTemplateExpression | ts.NoSubstitutionTemplateLiteral | ts.TemplateExpression): ResolveResult;
    update(target: ResolvedTemplateInfo, innerPositionRangeToChange: {
        start: number;
        end: number;
    }, text?: string): ResolvedTemplateInfo;
    private _getValueAsString;
}
