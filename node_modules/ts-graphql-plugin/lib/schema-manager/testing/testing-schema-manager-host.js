"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTestingSchemaManagerHost = void 0;
class TestingSchemaManagerHost {
    constructor(_config) {
        this._config = _config;
        this._watchers = [];
        this._files = _config.files || [];
    }
    getConfig() {
        return this._config;
    }
    getProjectRootPath() {
        return this._config.prjRootPath || '/';
    }
    readFile(path) {
        const found = this._files.find(f => f.fileName === path);
        if (found)
            return found.content;
    }
    fileExists(path) {
        return !!this._files.find(f => f.fileName === path);
    }
    watchFile(path, cb) {
        this._watchers.push({ path, cb });
        return { close() { } };
    }
    log(msg) {
        if (this._config.log) {
            this._config.log(msg);
        }
    }
    updateFile(path, content) {
        this._files = this._files.map(f => (f.fileName === path ? { ...f, content } : f));
        this._watchers.filter(w => w.path === path).forEach(w => w.cb(w.path));
    }
}
function createTestingSchemaManagerHost(config) {
    return new TestingSchemaManagerHost(config);
}
exports.createTestingSchemaManagerHost = createTestingSchemaManagerHost;
//# sourceMappingURL=testing-schema-manager-host.js.map