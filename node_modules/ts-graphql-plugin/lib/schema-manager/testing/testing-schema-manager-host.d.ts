import { SchemaManagerHost, SchemaConfig } from '../types';
export declare type CreateTestingSchemaManagerHostOptions = SchemaConfig & {
    prjRootPath?: string;
    files?: {
        fileName: string;
        content: string;
    }[];
    log?: (msg: string) => void;
};
declare class TestingSchemaManagerHost implements SchemaManagerHost {
    private _config;
    private _files;
    private _watchers;
    constructor(_config: CreateTestingSchemaManagerHostOptions);
    getConfig(): CreateTestingSchemaManagerHostOptions;
    getProjectRootPath(): string;
    readFile(path: string): string | undefined;
    fileExists(path: string): boolean;
    watchFile(path: string, cb: (fileName: string) => void): {
        close(): void;
    };
    log(msg: string): void;
    updateFile(path: string, content: string): void;
}
export declare function createTestingSchemaManagerHost(config: CreateTestingSchemaManagerHostOptions): TestingSchemaManagerHost;
export {};
