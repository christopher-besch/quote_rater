import { SchemaManagerHost } from './types';
import { SchemaManager } from './schema-manager';
import { FileSchemaManagerOptions } from './file-schema-manager';
import { RequestSetup } from './request-introspection-query';
interface FileSchemaConfigOptions {
    file: FileSchemaManagerOptions;
}
interface HttpSchemaConfigOptions {
    http: RequestSetup;
}
interface ScriptedHttpSchemaManagerOptions {
    http: {
        fromScript: string;
    };
}
declare type SchemaConfigOptions = FileSchemaConfigOptions | HttpSchemaConfigOptions | ScriptedHttpSchemaManagerOptions;
export declare class SchemaManagerFactory {
    private _host;
    constructor(_host: SchemaManagerHost);
    create(): SchemaManager;
    _convertOptionsFromString(path: string): SchemaConfigOptions;
}
export {};
