"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCompletionAtPosition = void 0;
const graphql_language_service_interface_1 = require("graphql-language-service-interface");
const simple_position_1 = require("./simple-position");
function translateCompletionItems(items) {
    const result = {
        isGlobalCompletion: false,
        isMemberCompletion: false,
        isNewIdentifierLocation: false,
        entries: items.map(r => {
            // FIXME use ts.ScriptElementKind
            const kind = r.kind ? r.kind + '' : 'unknown';
            return {
                name: r.label,
                kindModifiers: 'declare',
                kind,
                sortText: '0',
            };
        }),
    };
    return result;
}
function getCompletionAtPosition(ctx, delegate, fileName, position, options) {
    const schema = ctx.getSchema();
    if (!schema)
        return delegate(fileName, position, options);
    const node = ctx.findTemplateNode(fileName, position);
    if (!node)
        return delegate(fileName, position, options);
    const { resolvedInfo } = ctx.resolveTemplateInfo(fileName, node);
    if (!resolvedInfo) {
        return delegate(fileName, position, options);
    }
    const { combinedText, getInnerPosition, convertInnerPosition2InnerLocation } = resolvedInfo;
    // NOTE: The getAutocompleteSuggestions function does not return if missing '+1' shift
    const innerPositionToSearch = getInnerPosition(position).pos + 1;
    const innerLocation = convertInnerPosition2InnerLocation(innerPositionToSearch);
    ctx.debug('Get GraphQL complete suggestions. documentText: "' + combinedText + '", position: ' + innerPositionToSearch);
    const positionForSeach = new simple_position_1.SimplePosition({
        line: innerLocation.line,
        character: innerLocation.character,
    });
    const gqlCompletionItems = (0, graphql_language_service_interface_1.getAutocompleteSuggestions)(schema, combinedText, positionForSeach);
    ctx.debug(JSON.stringify(gqlCompletionItems));
    return translateCompletionItems(gqlCompletionItems);
}
exports.getCompletionAtPosition = getCompletionAtPosition;
//# sourceMappingURL=get-completion-at-position.js.map