"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getQuickInfoAtPosition = void 0;
const typescript_1 = __importDefault(require("typescript"));
const graphql_language_service_interface_1 = require("graphql-language-service-interface");
const simple_position_1 = require("./simple-position");
function getQuickInfoAtPosition(ctx, delegate, fileName, position) {
    const schema = ctx.getSchema();
    if (!schema)
        return delegate(fileName, position);
    const node = ctx.findTemplateNode(fileName, position);
    if (!node)
        return delegate(fileName, position);
    const { resolvedInfo } = ctx.resolveTemplateInfo(fileName, node);
    if (!resolvedInfo)
        return delegate(fileName, position);
    const { combinedText, getInnerPosition, convertInnerPosition2InnerLocation } = resolvedInfo;
    const cursor = new simple_position_1.SimplePosition(convertInnerPosition2InnerLocation(getInnerPosition(position).pos + 1));
    const result = (0, graphql_language_service_interface_1.getHoverInformation)(schema, combinedText, cursor);
    if (typeof result !== 'string' || !result.length)
        return delegate(fileName, position);
    return {
        kind: typescript_1.default.ScriptElementKind.string,
        textSpan: {
            start: position,
            length: 1,
        },
        kindModifiers: '',
        displayParts: [{ text: result, kind: '' }],
    };
}
exports.getQuickInfoAtPosition = getQuickInfoAtPosition;
//# sourceMappingURL=get-quick-info-at-position.js.map