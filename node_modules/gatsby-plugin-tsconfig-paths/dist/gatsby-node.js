"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var path_1 = __importDefault(require("path"));
var tsconfig_paths_webpack_plugin_1 = require("tsconfig-paths-webpack-plugin");
var types_1 = require("./types");
var utils_1 = require("./utils");
exports.resolvableExtensions = function () { return [".ts", ".tsx", ".js", ".jsx"]; };
exports.onCreateWebpackConfig = function (_a, pluginOptions) {
    var actions = _a.actions;
    var defaultOptions = {
        configFile: path_1.default.join(process.cwd(), 'tsconfig.json'),
        extensions: exports.resolvableExtensions(),
    };
    if (pluginOptions) {
        var excludeOptions = Object.keys(pluginOptions).filter(function (key) { return !types_1.ValidPluginOptions.includes(key); });
        pluginOptions = utils_1.omitKeys.apply(void 0, __spreadArrays([pluginOptions], excludeOptions));
    }
    var options = Object.assign({}, defaultOptions, pluginOptions);
    actions.setWebpackConfig({
        resolve: {
            plugins: [
                new tsconfig_paths_webpack_plugin_1.TsconfigPathsPlugin(options),
            ],
        },
    });
};
