{"version":3,"file":"component---src-pages-index-tsx-d8f01277977ebe4fd12c.js","mappings":"8MA2GA,EA5FuB,SAACA,GACpB,IAKIC,EALJ,GAAmCC,EAAAA,EAAAA,WAAS,GAAvCC,EAAL,KACA,GADA,MACiCD,EAAAA,EAAAA,UAAS,cAArCE,EAAL,KACA,GADA,MACmCF,EAAAA,EAAAA,UAAS,eAAvCG,EAAL,KACA,GADA,MACmCH,EAAAA,EAAAA,UAAS,KAAvCI,EAAL,KAAiBC,EAAjB,KA2DA,OApDAC,EAAAA,EAAAA,YAAU,WAEN,IAAIC,GADJR,EAAoB,IAAIS,gBAAgBC,SAASC,SACVC,IAAI,cAE3CN,EAAeE,GAAkC,OAiDjD,gBAAC,IAAD,KACI,gBAAC,IAAD,CAASK,QAAQ,gBACjB,yBAAOC,QAAQ,oBAAf,sBACA,yBAAOC,GAAG,mBAAmBC,KAAK,OAAOC,YAAaZ,IAAoB,2BAC1E,0BAAQa,QAlChB,WACI,IAAIC,EAAmBC,SAASC,eAAe,oBAC/Cf,EAAea,EAAiBG,OAChCtB,EAAkBuB,IAAI,aAAclB,GACpCmB,OAAOC,QAAQC,aAAa,GAAI,GAAOhB,SAASiB,SAAhD,IAA4D3B,EAAkB4B,YAC9EC,QAAQC,IAAIX,EAAiBG,OAC7BO,QAAQC,IAAIzB,KA4BR,QAECH,GACG,uBAAK6B,UAAWC,EAAAA,OACZ,uBAAKD,UAAWC,EAAAA,MACZ,2BAAK,4BACA7B,KAGT,uBAAK4B,UAAWC,EAAAA,MACZ,2BAAK,4BACA5B,KAGT,0BAAQc,QA7BxB,cA6BgB,eACA,0BAAQA,QA3BxB,cA2BgB,iBACA,0BAAQA,QAzBxB,cAyBgB,iBAIR,6BAAKb","sources":["webpack://quote_rater/./src/pages/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Layout from \"src/components/layout\";\nimport * as styles from \"src/styles/home.module.scss\";\nimport Heading from \"src/components/heading\";\n\nconst quote_regex = /### +(.*)\\n```\\n((?:.|\\n)*?)\\nâ€”(.*)\\n```\\n((?:- +.+\\n)*)/gm;\n\ntype Quote = {\n    origin: string;\n    text: string;\n    author: string;\n    comments: string;\n};\n\nconst Home: React.FC = (props) => {\n    let [show_cards, set_show_cards] = useState(false);\n    let [left_card, set_left_card] = useState(\"left_card\");\n    let [right_card, set_right_card] = useState(\"right_card\");\n    let [quotes_url, set_quotes_url] = useState(\"\");\n\n    let url_search_params: URLSearchParams;\n\n    let quotes: Quote[];\n    let adj: number[][];\n\n    useEffect(() => {\n        url_search_params = new URLSearchParams(location.search);\n        let quotes_url_raw = url_search_params.get(\"quotes_url\");\n\n        set_quotes_url(quotes_url_raw ? quotes_url_raw : \"\");\n    });\n\n    function dwn(url: string, callback: { (response: string): void; }): void {\n        let request = new XMLHttpRequest();\n        request.onload = () => {\n            if (request.status == 200)\n                callback(request.responseText);\n            else {\n                console.error(`Failed to load json '${url}' with status ${request.status}`);\n            }\n        };\n        request.onerror = () => {\n            console.error(`Failed to load json '${url}'`);\n        };\n        request.open(\"GET\", url, true);\n        request.send();\n    }\n\n    function load() {\n        let quotes_url_input = document.getElementById(\"quotes_url_input\") as HTMLButtonElement;\n        set_quotes_url(quotes_url_input.value);\n        url_search_params.set(\"quotes_url\", quotes_url);\n        window.history.replaceState({}, \"\", `${location.pathname}?${url_search_params.toString()}`);\n        console.log(quotes_url_input.value);\n        console.log(quotes_url);\n\n        // dwn(quotes_url, (response) => {\n        //     let match;\n        //     while (match = quote_regex.exec(response)) {\n        //         quotes.push({ origin: match[1], text: match[2], author: match[3], comments: match[4] });\n        //         adj.push([]);\n        //     }\n        //     console.log(quotes);\n        //     console.log(adj);\n        // });\n    }\n\n    function left_better() {\n\n    }\n    function equal() {\n\n    }\n    function right_better() {\n\n    }\n\n    return (\n        <Layout>\n            <Heading heading=\"Quote Rater\" />\n            <label htmlFor=\"quotes_url_input\">Input Quotes URL: </label>\n            <input id=\"quotes_url_input\" type=\"text\" placeholder={quotes_url}></input><br />\n            <button onClick={load}>Load</button>\n\n            {show_cards && (\n                <div className={styles.cards}>\n                    <div className={styles.card}>\n                        <pre><code>\n                            {left_card}\n                        </code></pre>\n                    </div>\n                    <div className={styles.card}>\n                        <pre><code>\n                            {right_card}\n                        </code></pre>\n                    </div>\n                    <button onClick={left_better}>Left Better</button>\n                    <button onClick={equal}>Roughly Equal</button>\n                    <button onClick={right_better}>Right Better</button>\n                </div>\n            )\n            }\n            <p>d{quotes_url}</p>\n        </Layout >\n    );\n};\nexport default Home;\n"],"names":["props","url_search_params","useState","show_cards","left_card","right_card","quotes_url","set_quotes_url","useEffect","quotes_url_raw","URLSearchParams","location","search","get","heading","htmlFor","id","type","placeholder","onClick","quotes_url_input","document","getElementById","value","set","window","history","replaceState","pathname","toString","console","log","className","styles"],"sourceRoot":""}